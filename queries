1.Requirement : Find 100 employee details for sampling from 5000 records of employee. We will use WITH clause and RAND() for the same , and also use ROW_NUMBER()

Explanation : WITH clause essentially makes it easier to write complex queries by breaking them down into manageable subqueries.
ROW_NUMBER()OVER (ORDER BY RAND()) generates a random row number for each row. This ensures that the rows are ordered randomly before assigning numbers.

WITH Emprow AS
( SELECT *, ROW_NUMBER() OVER (ORDER BY RAND()) AS row_num 
FROM EMPLOYEETABLE )
SELECT * FROM Emprow WHERE row_num <= 100;

2.Requirement : Find all employees, ID, Name, and Salary whose salary is higher than the average salary of all employees in the from EMPLOYEETABLE We will use AVG () along with WITH Clause, We will also create a temp table to store the value of Avg Salary and then join from main table

WITH temporaryTable AS 
( SELECT AVG(Salary) AS averageValue 
FROM EMPLOYEETABLE ) 
SELECT EmployeeID, Name, Salary FROM EMPLOYEETABLE
CROSS JOIN temporaryTable
WHERE Employee.Salary > temporaryTable.averageValue;


3. Example for a small nested Select query, where we need to show maximum quantity.
Where TABLEA as A  which has 2 schemas id and name
Where TABLEB as B  which has id and quanity
Here we can see id is common on both the tables so we can join and can create another table which has id, name and quanity or we can use the Select statement to query this first


SELECT A.id,A.name, B.quantity 
FROM TABLEA A
JOIN TABLEB B
ON  A.id = B.id
WHERE B.quantity > 
(SELECT MAX(quantity) 
FROM B);

